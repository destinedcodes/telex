name: Build and Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PROJECT_FILE: "MauiApp1/MauiApp1.csproj"

jobs:
  build-android:
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '11'

    - name: Generate version number using date and run number
      shell: pwsh
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
        echo "APP_VERSION=$ver" >> $GITHUB_OUTPUT

    - name: Install MAUI workloads
      shell: pwsh
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      shell: pwsh
      run: dotnet restore ${{ env.PROJECT_FILE }}

    - name: Publish Android app
      shell: pwsh
      run: |
        dotnet publish ${{ env.PROJECT_FILE }} -f net8.0-android -c Release -r android-arm64 -p:AndroidPackageFormat=aab -o ${{ github.workspace }}/output

    - name: Upload Android artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-app
        path: ${{ github.workspace }}/output/*

  build-windows:
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install MAUI workloads
      shell: pwsh
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      shell: pwsh
      run: dotnet restore ${{ env.PROJECT_FILE }}

    - name: Publish Windows app
      shell: pwsh
      run: |
        dotnet publish ${{ env.PROJECT_FILE }} -f net8.0-windows10.0.19041.0 -c Release -r win-x64 -o ${{ github.workspace }}/output

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-app
        path: ${{ github.workspace }}/output/*

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install MAUI workloads
      shell: bash
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      shell: bash
      run: dotnet restore ${{ env.PROJECT_FILE }}

    - name: Publish macOS app
      shell: bash
      run: |
        dotnet publish ${{ env.PROJECT_FILE }} -f net8.0-maccatalyst -c Release -r osx-x64 -p:Platform=x64 -o ${{ github.workspace }}/output

    - name: Upload macOS artifact
      uses: actions/upload-artifact@v3
      with:
        name: macos-app
        path: ${{ github.workspace }}/output/*

  build-ios:
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install MAUI workloads
      shell: bash
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      shell: bash
      run: dotnet restore ${{ env.PROJECT_FILE }}

    - name: Publish iOS app
      shell: bash
      run: |
        dotnet publish ${{ env.PROJECT_FILE }} -f net8.0-ios -c Release -r ios-arm64 -o ${{ github.workspace }}/output

    - name: Upload iOS artifact
      uses: actions/upload-artifact@v3
      with:
        name: ios-app
        path: ${{ github.workspace }}/output/*

  create-release:
    runs-on: ubuntu-latest
    needs: [build-android, build-windows, build-macos, build-ios]
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download Android artifact
      uses: actions/download-artifact@v3
      with:
        name: android-app

    - name: Download Windows artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-app

    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: macos-app

    - name: Download iOS artifact
      uses: actions/download-artifact@v3
      with:
        name: ios-app

    - name: Create Release
      id: create_release
      uses: actions/create-release@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version-creator.outputs.APP_VERSION }}
        release_name: Release ${{ steps.version-creator.outputs.APP_VERSION }}
        draft: false
        prerelease: false

    - name: Upload Android Asset to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/*.aab
        asset_name: myapp-android.aab
        asset_content_type: application/octet-stream

    - name: Upload Windows Asset to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/*.msix
        asset_name: myapp-windows.msix
        asset_content_type: application/octet-stream

    - name: Upload macOS Asset to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/*.app
        asset_name: myapp-macos.app
        asset_content_type: application/octet-stream

    - name: Upload iOS Asset to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/*.ipa
        asset_name: myapp-ios.ipa
        asset_content_type: application/octet-stream
