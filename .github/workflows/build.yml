name: Build MAUI Project

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PROJECT_PATH: "MauiApp1.sln"

jobs:
  build-android:
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '11'

    - name: Generate version number using date and run number
      shell: pwsh
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
        echo "APP_VERSION=$ver" >> $GITHUB_OUTPUT

    - name: Install MAUI workloads (required for GitHub-hosted runners)
      shell: pwsh
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      shell: pwsh
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Build Maui Android project
      shell: pwsh
      run: dotnet build ${{ env.PROJECT_PATH }} -c Debug --no-restore -p:PublishTrimmed=False

    - name: Archive APK
      shell: pwsh
      run: |
        $outputDir = "src\MauiApp1\bin\Debug\net8.0-android\"
        mkdir -p ${{ github.workspace }}/artifacts/
        cp $outputDir/*.apk ${{ github.workspace }}/artifacts/

  build-windows:
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3.2

    - name: Generate version number using date and run number
      shell: pwsh
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
        echo "APP_VERSION=$ver" >> $GITHUB_OUTPUT

    - name: Install MAUI workloads (required for GitHub-hosted runners)
      shell: pwsh
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      shell: pwsh
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Build Maui WinUI project
      shell: pwsh
      run: dotnet build ${{ env.PROJECT_PATH }} -c Debug -f net8.0-windows10.0.19041.0 -p:PublishTrimmed=False

    - name: Archive WinUI Binary
      shell: pwsh
      run: |
        $outputDir = "src\MauiApp1\bin\Debug\net8.0-windows10.0.19041.0\"
        mkdir -p ${{ github.workspace }}/artifacts/
        cp $outputDir/*.exe ${{ github.workspace }}/artifacts/

  create-release:
    needs: [build-android, build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version-creator.outputs.APP_VERSION }}
        release_name: Release ${{ steps.version-creator.outputs.APP_VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/artifacts/*.apk
        asset_name: MauiApp1-android-${{ steps.version-creator.outputs.APP_VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload Windows Executable
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/artifacts/*.exe
        asset_name: MauiApp1-windows-${{ steps.version-creator.outputs.APP_VERSION }}.exe
        asset_content_type: application/vnd.microsoft.portable-executable
